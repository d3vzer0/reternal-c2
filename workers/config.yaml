empire2:
  name: EmpireV2
  description: Empire is a post-exploitation framework that includes a pure-PowerShell2.0 Windows agent, and a pure Python 2.6/2.7 Linux/OS X agent. It is the merge of the previous PowerShell Empire and Python EmPyre projects. The framework offers cryptologically-secure communications and a flexible architecture. On the PowerShell side, Empire implements the ability to run PowerShell agents without needing powershell.exe, rapidly deployable post-exploitation modules ranging from key loggers to Mimikatz, and adaptable communications to evade network detection, all wrapped up in a usability-focused framework.
  thumbnail: https://d21ic6tdqjqnyw.cloudfront.net/wp-content/uploads/2015/08/08085833/empire_main_menu-1024x622.jpg
  platforms:
    - Windows
    - macOS
    - Linux
  enabled: true
  state: c2.state.empire2
  agents:
    get: c2.agents.empire2.get
    set: c2.agents.empire2.set
  listeners:
    get: c2.listeners.empire2.get
    create: c2.listeners.empire2.create
    options: c2.listeners.empire2.options
    delete: c2.listeners.empire2.delete
  stagers:
    get: c2.stagers.empire2.get
    set: c2.listeners.empire2.set
  build:
    - name: listeners
      description: Choose a listener that the stager will use
      task: c2.listeners.empire.set
    - name: BuildStager
      description: 'Set parameters for stager'
      task: 'c2.stagers.empire2.set'
    - name: 'Build stager'
      description: 'Build stager'
      task: 'c2.stagers.empire2.build'

covenant:
  name: Covenant
  description: Covenant is a .NET command and control framework that aims to highlight the attack surface of .NET, make the use of offensive .NET tradecraft easier, and serve as a collaborative command and control platform for red teamers. Covenant is an ASP.NET Core, cross-platform application that includes a web-based interface that allows for multi-user collaboration.
  thumbnail: https://www.fatrodzianko.com/wp-content/uploads/2019/08/covenant-c2_create-listener.jpg
  platforms:
    - Windows
  enabled: false
  state: c2.state.empire2
  agents:
    get: c2.agents.covenant.get
    set: c2.agents.covenant.set
  listeners:
    get: c2.listeners.covenant.get
    set: c2.listeners.covenant.set
  stagers:
    get: c2.stagers.covenant.get
    set: c2.listeners.covenant.set
  build:
    - name: listeners
      description: Choose a listener that the stager will use
      task: c2.listeners.covenant.set
    - name: BuildStager
      description: 'Set parameters for stager'
      task: 'c2.stagers.covenant.set'
    - name: 'Build stager'
      description: 'Build stager'
      task: 'c2.stagers.covenant.build'
      